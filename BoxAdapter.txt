package com.eptrioperator.task1;

import android.content.Context;
import android.view.LayoutInflater;
import android.view.ViewGroup;

import androidx.recyclerview.widget.RecyclerView;

import com.eptrioperator.task1.databinding.ItemBoxBinding;

import java.util.ArrayList;
import java.util.List;
import java.util.Random;

public class BoxAdapter extends RecyclerView.Adapter<BoxAdapter.MyViewHolder> {
    BoxModel BoxModelRemainingArrayPosition = null;
    private final Context mContext;
    private final List<BoxModel> arr;
    private final List<BoxModel> remaningarr;

    public BoxAdapter(Context context, List<BoxModel> popularProductInfos) {
        mContext = context;
        arr = popularProductInfos;
        remaningarr = new ArrayList<>(arr);
        BoxModelRemainingArrayPosition = getRandomPosition();
    }

    @Override
    public BoxAdapter.MyViewHolder onCreateViewHolder(ViewGroup parent, int type) {
        ItemBoxBinding viewProductCategoryBinding = ItemBoxBinding.inflate(LayoutInflater.from(parent.getContext()), parent, false);
        return new MyViewHolder(viewProductCategoryBinding);
    }

    @Override
    public void onBindViewHolder(MyViewHolder holder, int position) {

        BoxModel box = arr.get(position);
        if (BoxModelRemainingArrayPosition != null && position == BoxModelRemainingArrayPosition.getPosition()) {
            holder.binding.view.setBackgroundColor(mContext.getResources().getColor(R.color.green));
        } else {
            if (box.isSelected()) {
                holder.binding.view.setBackgroundColor(mContext.getResources().getColor(R.color.blue));
            } else {
                holder.binding.view.setBackgroundColor(mContext.getResources().getColor(R.color.gray));
            }
        }
        holder.binding.view.setOnClickListener(v -> {
            if (BoxModelRemainingArrayPosition != null && position == BoxModelRemainingArrayPosition.getPosition()) {
                holder.binding.view.setBackgroundColor(mContext.getResources().getColor(R.color.green));
                box.setSelected(true);
                remaningarr.remove(BoxModelRemainingArrayPosition);
                BoxModelRemainingArrayPosition = getRandomPosition();
                notifyDataSetChanged();
            }
        });

    }

    public BoxModel getRandomPosition() {
        if (remaningarr.size() > 0) {
            Random random = new Random();
            return remaningarr.get(random.nextInt(remaningarr.size()));
        } else {
            return null;
        }
    }

    @Override
    public int getItemCount() {
        return arr.size();
    }

    public class MyViewHolder extends RecyclerView.ViewHolder {
        private final ItemBoxBinding binding;

        public MyViewHolder(ItemBoxBinding binding) {
            super(binding.getRoot());
            this.binding = binding;
        }
    }
}